-- Automatically generated by SQLQueryTestSuite
-- Number of queries: 61


-- !query 0
CREATE TEMPORARY VIEW tenk2 AS SELECT * FROM tenk1
-- !query 0 schema
struct<>
-- !query 0 output



-- !query 1
CREATE TABLE empsalary (
    depname string,
    empno integer,
    salary int,
    enroll_date date
) USING parquet
-- !query 1 schema
struct<>
-- !query 1 output



-- !query 2
INSERT INTO empsalary VALUES ('develop', 10, 5200, '2007-08-01')
-- !query 2 schema
struct<>
-- !query 2 output



-- !query 3
INSERT INTO empsalary VALUES ('sales', 1, 5000, '2006-10-01')
-- !query 3 schema
struct<>
-- !query 3 output



-- !query 4
INSERT INTO empsalary VALUES ('personnel', 5, 3500, '2007-12-10')
-- !query 4 schema
struct<>
-- !query 4 output



-- !query 5
INSERT INTO empsalary VALUES ('sales', 4, 4800, '2007-08-08')
-- !query 5 schema
struct<>
-- !query 5 output



-- !query 6
INSERT INTO empsalary VALUES ('personnel', 2, 3900, '2006-12-23')
-- !query 6 schema
struct<>
-- !query 6 output



-- !query 7
INSERT INTO empsalary VALUES ('develop', 7, 4200, '2008-01-01')
-- !query 7 schema
struct<>
-- !query 7 output



-- !query 8
INSERT INTO empsalary VALUES ('develop', 9, 4500, '2008-01-01')
-- !query 8 schema
struct<>
-- !query 8 output



-- !query 9
INSERT INTO empsalary VALUES ('sales', 3, 4800, '2007-08-01')
-- !query 9 schema
struct<>
-- !query 9 output



-- !query 10
INSERT INTO empsalary VALUES ('develop', 8, 6000, '2006-10-01')
-- !query 10 schema
struct<>
-- !query 10 output



-- !query 11
INSERT INTO empsalary VALUES ('develop', 11, 5200, '2007-08-15')
-- !query 11 schema
struct<>
-- !query 11 output



-- !query 12
SELECT depname, empno, salary, sum(salary) OVER (PARTITION BY depname) FROM empsalary ORDER BY depname, salary
-- !query 12 schema
struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>
-- !query 12 output
develop	7	4200	25100
develop	9	4500	25100
develop	10	5200	25100
develop	11	5200	25100
develop	8	6000	25100
personnel	5	3500	7400
personnel	2	3900	7400
sales	3	4800	14600
sales	4	4800	14600
sales	1	5000	14600


-- !query 13
SELECT depname, empno, salary, rank() OVER (PARTITION BY depname ORDER BY salary) FROM empsalary
-- !query 13 schema
struct<depname:string,empno:int,salary:int,RANK() OVER (PARTITION BY depname ORDER BY salary ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>
-- !query 13 output
develop	10	5200	3
develop	11	5200	3
develop	7	4200	1
develop	8	6000	5
develop	9	4500	2
personnel	2	3900	2
personnel	5	3500	1
sales	1	5000	3
sales	3	4800	1
sales	4	4800	1


-- !query 14
SELECT four, ten, SUM(SUM(four)) OVER (PARTITION BY four), AVG(ten) FROM tenk1
GROUP BY four, ten ORDER BY four, ten
-- !query 14 schema
struct<four:int,ten:int,sum(sum(CAST(four AS BIGINT))) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,avg(ten):double>
-- !query 14 output
0	0	0	0.0
0	2	0	2.0
0	4	0	4.0
0	6	0	6.0
0	8	0	8.0
1	1	2500	1.0
1	3	2500	3.0
1	5	2500	5.0
1	7	2500	7.0
1	9	2500	9.0
2	0	5000	0.0
2	2	5000	2.0
2	4	5000	4.0
2	6	5000	6.0
2	8	5000	8.0
3	1	7500	1.0
3	3	7500	3.0
3	5	7500	5.0
3	7	7500	7.0
3	9	7500	9.0


-- !query 15
SELECT depname, empno, salary, sum(salary) OVER w FROM empsalary WINDOW w AS (PARTITION BY depname)
-- !query 15 schema
struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>
-- !query 15 output
develop	10	5200	25100
develop	11	5200	25100
develop	7	4200	25100
develop	8	6000	25100
develop	9	4500	25100
personnel	2	3900	7400
personnel	5	3500	7400
sales	1	5000	14600
sales	3	4800	14600
sales	4	4800	14600


-- !query 16
SELECT COUNT(*) OVER () FROM tenk1 WHERE unique2 < 10
-- !query 16 schema
struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>
-- !query 16 output
10
10
10
10
10
10
10
10
10
10


-- !query 17
SELECT COUNT(*) OVER w FROM tenk1 WHERE unique2 < 10 WINDOW w AS ()
-- !query 17 schema
struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>
-- !query 17 output
10
10
10
10
10
10
10
10
10
10


-- !query 18
SELECT four FROM tenk1 WHERE FALSE WINDOW w AS (PARTITION BY ten)
-- !query 18 schema
struct<four:int>
-- !query 18 output



-- !query 19
SELECT sum(four) OVER (PARTITION BY ten ORDER BY unique2) AS sum_1, ten, four FROM tenk1 WHERE unique2 < 10
-- !query 19 schema
struct<sum_1:bigint,ten:int,four:int>
-- !query 19 output
0	0	0
0	0	0
0	4	0
1	7	1
1	9	1
2	0	2
3	1	3
3	3	3
4	1	1
5	1	1


-- !query 20
SELECT row_number() OVER (ORDER BY unique2) FROM tenk1 WHERE unique2 < 10
-- !query 20 schema
struct<row_number() OVER (ORDER BY unique2 ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>
-- !query 20 output
1
10
2
3
4
5
6
7
8
9


-- !query 21
SELECT rank() OVER (PARTITION BY four ORDER BY ten) AS rank_1, ten, four FROM tenk1 WHERE unique2 < 10
-- !query 21 schema
struct<rank_1:int,ten:int,four:int>
-- !query 21 output
1	0	0
1	0	0
1	0	2
1	1	1
1	1	1
1	1	3
2	3	3
3	4	0
3	7	1
4	9	1


-- !query 22
SELECT dense_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10
-- !query 22 schema
struct<DENSE_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>
-- !query 22 output
1	0	0
1	0	0
1	0	2
1	1	1
1	1	1
1	1	3
2	3	3
2	4	0
2	7	1
3	9	1


-- !query 23
SELECT percent_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10
-- !query 23 schema
struct<PERCENT_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>
-- !query 23 output
0.0	0	0
0.0	0	0
0.0	0	2
0.0	1	1
0.0	1	1
0.0	1	3
0.6666666666666666	7	1
1.0	3	3
1.0	4	0
1.0	9	1


-- !query 24
SELECT cume_dist() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10
-- !query 24 schema
struct<cume_dist() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>
-- !query 24 output
0.5	1	1
0.5	1	1
0.5	1	3
0.6666666666666666	0	0
0.6666666666666666	0	0
0.75	7	1
1.0	0	2
1.0	3	3
1.0	4	0
1.0	9	1


-- !query 25
SELECT ntile(3) OVER (ORDER BY ten, four), ten, four FROM tenk1 WHERE unique2 < 10
-- !query 25 schema
struct<ntile(3) OVER (ORDER BY ten ASC NULLS FIRST, four ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>
-- !query 25 output
1	0	0
1	0	0
1	0	2
1	1	1
2	1	1
2	1	3
2	3	3
3	4	0
3	7	1
3	9	1


-- !query 26
SELECT lag(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10
-- !query 26 schema
struct<lag(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN -1 FOLLOWING AND -1 FOLLOWING):int,ten:int,four:int>
-- !query 26 output
0	0	0
0	4	0
1	1	1
1	3	3
1	7	1
7	9	1
NULL	0	0
NULL	0	2
NULL	1	1
NULL	1	3


-- !query 27
SELECT lead(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10
-- !query 27 schema
struct<lead(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>
-- !query 27 output
0	0	0
1	1	1
3	1	3
4	0	0
7	1	1
9	7	1
NULL	0	2
NULL	3	3
NULL	4	0
NULL	9	1


-- !query 28
SELECT lead(ten * 2, 1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10
-- !query 28 schema
struct<lead((ten * 2), 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>
-- !query 28 output
0	0	0
14	1	1
18	7	1
2	1	1
6	1	3
8	0	0
NULL	0	2
NULL	3	3
NULL	4	0
NULL	9	1


-- !query 29
SELECT lead(ten * 2, 1, -1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10
-- !query 29 schema
struct<lead((ten * 2), 1, -1) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>
-- !query 29 output
-1	0	2
-1	3	3
-1	4	0
-1	9	1
0	0	0
14	1	1
18	7	1
2	1	1
6	1	3
8	0	0


-- !query 30
SELECT first(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10
-- !query 30 schema
struct<first(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>
-- !query 30 output
0	0	0
0	0	0
0	0	2
0	4	0
1	1	1
1	1	1
1	1	3
1	3	3
1	7	1
1	9	1


-- !query 31
SELECT last(four) OVER (ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10
-- !query 31 schema
struct<last(four, false) OVER (ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>
-- !query 31 output
0	4	0
1	1	1
1	1	1
1	1	3
1	7	1
1	9	1
2	0	0
2	0	0
2	0	2
3	3	3


-- !query 32
SELECT last(ten) OVER (PARTITION BY four), ten, four FROM
(SELECT * FROM tenk1 WHERE unique2 < 10 ORDER BY four, ten)s
ORDER BY four, ten
-- !query 32 schema
struct<last(ten, false) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int,ten:int,four:int>
-- !query 32 output
4	0	0
4	0	0
4	4	0
9	1	1
9	1	1
9	7	1
9	9	1
0	0	2
3	1	3
3	3	3


-- !query 33
SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER (PARTITION BY two ORDER BY ten) AS wsum
FROM tenk1 GROUP BY ten, two
-- !query 33 schema
struct<ten:int,two:int,gsum:bigint,wsum:bigint>
-- !query 33 output
0	0	45000	45000
1	1	46000	46000
2	0	47000	92000
3	1	48000	94000
4	0	49000	141000
5	1	50000	144000
6	0	51000	192000
7	1	52000	196000
8	0	53000	245000
9	1	54000	250000


-- !query 34
SELECT count(*) OVER (PARTITION BY four), four FROM (SELECT * FROM tenk1 WHERE two = 1)s WHERE unique2 < 10
-- !query 34 schema
struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,four:int>
-- !query 34 output
2	3
2	3
4	1
4	1
4	1
4	1


-- !query 35
SELECT (count(*) OVER (PARTITION BY four ORDER BY ten) +
  sum(hundred) OVER (PARTITION BY four ORDER BY ten)) AS cntsum
  FROM tenk1 WHERE unique2 < 10
-- !query 35 schema
struct<cntsum:bigint>
-- !query 35 output
136
22
22
24
24
51
82
87
92
92


-- !query 36
SELECT * FROM(
  SELECT count(*) OVER (PARTITION BY four ORDER BY ten) +
    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS total,
    count(*) OVER (PARTITION BY four ORDER BY ten) AS fourcount,
    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS twosum
    FROM tenk1
)sub WHERE total <> fourcount + twosum
-- !query 36 schema
struct<total:bigint,fourcount:bigint,twosum:bigint>
-- !query 36 output



-- !query 37
SELECT avg(four) OVER (PARTITION BY four ORDER BY thousand / 100) FROM tenk1 WHERE unique2 < 10
-- !query 37 schema
struct<avg(CAST(four AS BIGINT)) OVER (PARTITION BY four ORDER BY (thousand div 100) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double>
-- !query 37 output
0.0
0.0
0.0
1.0
1.0
1.0
1.0
2.0
3.0
3.0


-- !query 38
SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER win AS wsum
FROM tenk1 GROUP BY ten, two WINDOW win AS (PARTITION BY two ORDER BY ten)
-- !query 38 schema
struct<ten:int,two:int,gsum:bigint,wsum:bigint>
-- !query 38 output
0	0	45000	45000
1	1	46000	46000
2	0	47000	92000
3	1	48000	94000
4	0	49000	141000
5	1	50000	144000
6	0	51000	192000
7	1	52000	196000
8	0	53000	245000
9	1	54000	250000


-- !query 39
SELECT sum(salary),
  row_number() OVER (ORDER BY depname),
  sum(sum(salary)) OVER (ORDER BY depname DESC)
FROM empsalary GROUP BY depname
-- !query 39 schema
struct<sum(salary):bigint,row_number() OVER (ORDER BY depname ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,sum(sum(CAST(salary AS BIGINT))) OVER (ORDER BY depname DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>
-- !query 39 output
14600	3	14600
25100	1	47100
7400	2	22000


-- !query 40
SELECT sum(salary) OVER w1, count(*) OVER w2
FROM empsalary WINDOW w1 AS (ORDER BY salary), w2 AS (ORDER BY salary)
-- !query 40 schema
struct<sum(CAST(salary AS BIGINT)) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,count(1) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>
-- !query 40 output
11600	3
16100	4
25700	6
25700	6
30700	7
3500	1
41100	9
41100	9
47100	10
7400	2


-- !query 41
SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 WHERE FALSE)s
-- !query 41 schema
struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>
-- !query 41 output



-- !query 42
SELECT sum(salary) OVER w, rank() OVER w FROM empsalary WINDOW w AS (PARTITION BY depname ORDER BY salary DESC)
-- !query 42 schema
struct<sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,RANK() OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>
-- !query 42 output
14600	2
14600	2
16400	2
16400	2
20900	4
25100	5
3900	1
5000	1
6000	1
7400	2


-- !query 43
create temporary view int4_tbl as select * from values
  (0),
  (123456),
  (-123456),
  (2147483647),
  (-2147483647)
  as int4_tbl(f1)
-- !query 43 schema
struct<>
-- !query 43 output



-- !query 44
SELECT SUM(COUNT(f1)) OVER () FROM int4_tbl WHERE f1=42
-- !query 44 schema
struct<sum(count(f1)) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>
-- !query 44 output
0


-- !query 45
select ten,
  sum(unique1) + sum(unique2) as res,
  rank() over (order by sum(unique1) + sum(unique2)) as rank
from tenk1
group by ten order by ten
-- !query 45 schema
struct<ten:int,res:bigint,rank:int>
-- !query 45 output
0	9976146	4
1	10114187	9
2	10059554	8
3	9878541	1
4	9881005	2
5	9981670	5
6	9947099	3
7	10120309	10
8	9991305	6
9	10040184	7


-- !query 46
SELECT four, ten,
sum(ten) over (partition by four order by ten),
last(ten) over (partition by four order by ten)
FROM (select distinct ten, four from tenk1) ss
-- !query 46 schema
struct<four:int,ten:int,sum(CAST(ten AS BIGINT)) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>
-- !query 46 output
0	0	0	0
0	2	2	2
0	4	6	4
0	6	12	6
0	8	20	8
1	1	1	1
1	3	4	3
1	5	9	5
1	7	16	7
1	9	25	9
2	0	0	0
2	2	2	2
2	4	6	4
2	6	12	6
2	8	20	8
3	1	1	1
3	3	4	3
3	5	9	5
3	7	16	7
3	9	25	9


-- !query 47
SELECT four, ten,
sum(ten) over (partition by four order by ten range between unbounded preceding and current row),
last(ten) over (partition by four order by ten range between unbounded preceding and current row)
FROM (select distinct ten, four from tenk1) ss
-- !query 47 schema
struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>
-- !query 47 output
0	0	0	0
0	2	2	2
0	4	6	4
0	6	12	6
0	8	20	8
1	1	1	1
1	3	4	3
1	5	9	5
1	7	16	7
1	9	25	9
2	0	0	0
2	2	2	2
2	4	6	4
2	6	12	6
2	8	20	8
3	1	1	1
3	3	4	3
3	5	9	5
3	7	16	7
3	9	25	9


-- !query 48
SELECT four, ten,
sum(ten) over (partition by four order by ten range between unbounded preceding and unbounded following),
last(ten) over (partition by four order by ten range between unbounded preceding and unbounded following)
FROM (select distinct ten, four from tenk1) ss
-- !query 48 schema
struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>
-- !query 48 output
0	0	20	8
0	2	20	8
0	4	20	8
0	6	20	8
0	8	20	8
1	1	25	9
1	3	25	9
1	5	25	9
1	7	25	9
1	9	25	9
2	0	20	8
2	2	20	8
2	4	20	8
2	6	20	8
2	8	20	8
3	1	25	9
3	3	25	9
3	5	25	9
3	7	25	9
3	9	25	9


-- !query 49
SELECT sum(unique1) over (order by four range between current row and unbounded following),
unique1, four
FROM tenk1 WHERE unique1 < 10
-- !query 49 schema
struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>
-- !query 49 output
10	3	3
10	7	3
18	2	2
18	6	2
33	1	1
33	5	1
33	9	1
45	0	0
45	4	0
45	8	0


-- !query 50
SELECT sum(unique1) over (rows between current row and unbounded following),
unique1, four
FROM tenk1 WHERE unique1 < 10
-- !query 50 schema
struct<sum(unique1) OVER (ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>
-- !query 50 output
0	0	0
10	3	3
15	5	1
23	8	0
32	9	1
38	6	2
39	1	1
41	2	2
45	4	0
7	7	3


-- !query 51
SELECT sum(unique1) over (rows between 2 preceding and 2 following),
unique1, four
FROM tenk1 WHERE unique1 < 10
-- !query 51 schema
struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>
-- !query 51 output
10	0	0
13	2	2
15	7	3
22	1	1
23	3	3
26	6	2
29	9	1
31	8	0
32	5	1
7	4	0


-- !query 52
SELECT sum(unique1) over (rows between 2 preceding and 1 preceding),
unique1, four
FROM tenk1 WHERE unique1 < 10
-- !query 52 schema
struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>
-- !query 52 output
10	0	0
13	3	3
15	8	0
17	5	1
3	6	2
4	2	2
6	1	1
7	9	1
8	7	3
NULL	4	0


-- !query 53
SELECT sum(unique1) over (rows between 1 following and 3 following),
unique1, four
FROM tenk1 WHERE unique1 < 10
-- !query 53 schema
struct<sum(unique1) OVER (ROWS BETWEEN 1 FOLLOWING AND 3 FOLLOWING):bigint,unique1:int,four:int>
-- !query 53 output
0	7	3
10	5	1
15	8	0
16	2	2
16	9	1
22	6	2
23	1	1
7	3	3
9	4	0
NULL	0	0


-- !query 54
SELECT sum(unique1) over (rows between unbounded preceding and 1 following),
unique1, four
FROM tenk1 WHERE unique1 < 10
-- !query 54 schema
struct<sum(unique1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING):bigint,unique1:int,four:int>
-- !query 54 output
13	1	1
22	6	2
30	9	1
35	8	0
38	5	1
45	0	0
45	3	3
45	7	3
6	4	0
7	2	2


-- !query 55
CREATE TEMP VIEW v_window AS
SELECT i.id, sum(i.id) over (order by i.id rows between 1 preceding and 1 following) as sum_rows
FROM range(1, 11) i
-- !query 55 schema
struct<>
-- !query 55 output



-- !query 56
SELECT * FROM v_window
-- !query 56 schema
struct<id:bigint,sum_rows:bigint>
-- !query 56 output
1	3
10	19
2	6
3	9
4	12
5	15
6	18
7	21
8	24
9	27


-- !query 57
DROP VIEW v_window
-- !query 57 schema
struct<>
-- !query 57 output



-- !query 58
DROP TABLE empsalary
-- !query 58 schema
struct<>
-- !query 58 output



-- !query 59
DROP VIEW tenk2
-- !query 59 schema
struct<>
-- !query 59 output



-- !query 60
DROP VIEW int4_tbl
-- !query 60 schema
struct<>
-- !query 60 output

